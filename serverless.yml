service:
  name: shopping-products

plugins:
  - serverless-pseudo-parameters
  - serverless-iam-roles-per-function
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

custom:
  productsTableName: shopping-${self:provider.stage}-products
  productsTableArn: # ARNs are addresses of deployed services in AWS space
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - Ref: AWS::Region
      - Ref: AWS::AccountId
      - table/${self:custom.productsTableName} 
  dynamodb:
    start:
      migrate: true  
      seed: true
    seed:
      products:
        sources:
          - table: ${self:custom.productsTableName}
            sources: [./products/seed_data/products.json]          

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 128
  stage: dev
  region: us-east-1
  environment:
    PRODUCTS_TABLE_NAME: ${self:custom.productsTableName}  

functions:
  get-products:
    handler: functions/get-products.handler
    events:
      - http:
          path: /products
          method: get    
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:scan
        Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.productsTableName}
          


resources:
  Resources:
    productsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.productsTableName}
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH 
